---
components:
  schemas:
    Stock:
      properties:
        brands:
          items:
            format: objectId
            type: string
          type: array
        categories:
          items:
            format: objectId
            type: string
          type: array
        date:
          format: date-time
          type: string
        finalStockCSV:
          type: string
        initialStockCSV:
          type: string
        isFinalCalculation:
          default: false
          type: boolean
        note:
          type: string
        reference:
          type: string
        type:
          enum:
            - Partial
            - Full
          type: string
      required:
        - date
        - reference
        - type
        - initialStockCSV
        - isFinalCalculation
      type: object
    UpdateStock:
      properties:
        brands:
          items:
            format: objectId
            type: string
          type: array
        categories:
          items:
            format: objectId
            type: string
          type: array
        date:
          format: date-time
          type: string
        finalStockCSV:
          type: string
        initialStockCSV:
          type: string
        isFinalCalculation:
          type: boolean
        note:
          type: string
        reference:
          type: string
        type:
          enum:
            - Partial
            - Full
          type: string
      type: object
info:
  title: Your API Documentation
  version: 1.0.0
paths:
  /stocks:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Stock'
                type: array
          description: A list of stock entries
      summary: Get all stock entries
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: Stock created successfully
        '400':
          description: Invalid input
      summary: Create a new stock entry
  /stocks/{id}:
    delete:
      parameters:
        - description: The stock ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Stock entry deleted successfully
        '404':
          description: Stock entry not found
      summary: Delete a stock entry by ID
    get:
      parameters:
        - description: The stock ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: Stock entry found
        '404':
          description: Stock entry not found
      summary: Get a stock entry by ID
    put:
      parameters:
        - description: The stock ID
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStock'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: Stock entry updated successfully
        '400':
          description: Invalid input
        '404':
          description: Stock entry not found
      summary: Update a stock entry by ID
swagger: 3.1.0
